{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductsService {\n  constructor(http) {\n    this.http = http;\n  }\n  getProducts() {\n    return this.http.get('/api/products');\n  }\n  static {\n    this.ɵfac = function ProductsService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ProductsService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ProductsService,\n      factory: ProductsService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["ProductsService","constructor","http","getProducts","get","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Projects\\sharp-shop\\SharpShop.Web\\ClientApp\\src\\app\\products\\products.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface Product {\r\n  id: number;\r\n  name: string;\r\n  description: string;\r\n  price: number;\r\n  stock: number;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ProductsService {\r\n  constructor(private http: HttpClient) {}\r\n  getProducts(): Observable<Product[]> {\r\n    return this.http.get<Product[]>('/api/products');\r\n  }\r\n}\r\n"],"mappings":";;AAaA,OAAM,MAAOA,eAAe;EAC1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EACvCC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAY,eAAe,CAAC;EAClD;;;uCAJWJ,eAAe,EAAAK,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAfR,eAAe;MAAAS,OAAA,EAAfT,eAAe,CAAAU,IAAA;MAAAC,UAAA,EADF;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}